"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.TableContext = exports.TableVariant = exports.TableGridBreakpoint = void 0;

var _react = _interopRequireDefault(require("react"));

var _table = _interopRequireDefault(require("@patternfly/react-styles/css/components/Table/table"));

var _tableGrid = _interopRequireDefault(require("@patternfly/react-styles/css/components/Table/table-grid"));

var _base = require("./base");

var _reactCore = require("@patternfly/react-core");

var _reactStyles = require("@patternfly/react-styles");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _SortColumn = require("./SortColumn");

var _BodyCell = _interopRequireDefault(require("./BodyCell"));

var _HeaderCell = _interopRequireDefault(require("./HeaderCell"));

var _RowWrapper = _interopRequireDefault(require("./RowWrapper"));

var _BodyWrapper = _interopRequireDefault(require("./BodyWrapper"));

var _headerUtils = require("./utils/headerUtils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var TableGridBreakpoint = {
  none: null,
  grid: 'grid',
  gridMd: 'grid-md',
  gridLg: 'grid-lg',
  gridXl: 'grid-xl',
  grid2xl: 'grid-2xl'
};
exports.TableGridBreakpoint = TableGridBreakpoint;
var TableVariant = {
  compact: 'compact'
};
exports.TableVariant = TableVariant;
var propTypes = {
  /** Table elements [Head, Body and Footer]. */
  children: _propTypes["default"].node,

  /** Addional classes for Table. */
  className: _propTypes["default"].string,

  /** Function called when user wants to collapse row. */
  onCollapse: _propTypes["default"].func,

  /** Function called when user wants to compound expand row. */
  onExpand: _propTypes["default"].func,

  /** Table variant, defaults to large. */
  variant: _propTypes["default"].oneOf(Object.values(TableVariant)),

  /** Size at which table is broken into tiles. */
  gridBreakPoint: _propTypes["default"].oneOf(Object.values(TableGridBreakpoint)),

  /** Indicates if border is visible on a compacat table.  Note that this can not be applied when using expandable */
  borders: _propTypes["default"].bool,

  /** Settings for sorting, which index and direction is sorted by. */
  sortBy: _propTypes["default"].shape({
    index: _propTypes["default"].number,
    direction: _propTypes["default"].oneOf(Object.values(_SortColumn.SortByDirection))
  }),

  /** Function called when user wants to select row. */
  onSelect: _propTypes["default"].func,

  /** Function called when user wants to sort table. */
  onSort: _propTypes["default"].func,

  /** Additional cell displayed at the end of each row with dropdown of action items. */
  actions: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    onClick: _propTypes["default"].func,
    title: _propTypes["default"].node
  })),

  /** Function should resolve an array of actions for each row in the same format as actions. */
  actionResolver: _propTypes["default"].func,

  /** Function should resolve if action kebap is disabled for each row */
  areActionsDisabled: _propTypes["default"].func,

  /** Override to the default BodyWrapper renderer */
  bodyWrapper: _propTypes["default"].func,

  /** Override to the default RowWrapper renderer */
  rowWrapper: _propTypes["default"].func,

  /** Actual rows to display in table. Either array of strings or row objects. <br/>
   * If you want to use components in row cells you can pass them as title prop in cells definition. <br/>
   * <pre>Ex: rows:[
   *   {cells:[
   *     {title: &lt;div>Some component&lt;/div>}
   *     ...
   *   ]}
   * ]
   * </pre> */
  rows: _propTypes["default"].arrayOf(_propTypes["default"].oneOfType([_propTypes["default"].shape({
    cells: _propTypes["default"].arrayOf(_propTypes["default"].oneOfType([_propTypes["default"].node, _propTypes["default"].shape({
      title: _propTypes["default"].node
    })])),
    isOpen: _propTypes["default"].bool,
    parent: _propTypes["default"].number,
    fullWidth: _propTypes["default"].bool,
    noPadding: _propTypes["default"].bool,
    props: _propTypes["default"].any
  }), _propTypes["default"].arrayOf(_propTypes["default"].oneOfType([_propTypes["default"].shape({
    title: _propTypes["default"].node
  }), _propTypes["default"].node]))])).isRequired,

  /** Header cells to display in table. Either array of strings or array of string or cell object. */
  cells: _propTypes["default"].arrayOf(_propTypes["default"].oneOfType([_propTypes["default"].node, _propTypes["default"].shape({
    title: _propTypes["default"].node,
    transforms: _propTypes["default"].arrayOf(_propTypes["default"].func),
    // Applies only to header cell
    cellTransforms: _propTypes["default"].arrayOf(_propTypes["default"].func),
    // Applies only to body cells
    columnTransforms: _propTypes["default"].arrayOf(_propTypes["default"].func),
    // Applies to both header and body cells
    formatters: _propTypes["default"].arrayOf(_propTypes["default"].func),
    cellFormatters: _propTypes["default"].arrayOf(_propTypes["default"].func)
  })])).isRequired,

  /** Aria labeled by this property collapse and select. */
  rowLabeledBy: _propTypes["default"].string,

  /** Id prefix for expand buttons. */
  expandId: _propTypes["default"].string,

  /** Id prefix for expanded content. */
  contentId: _propTypes["default"].string,

  /** Position of dropdown from actions will be displayed. */
  dropdownPosition: _propTypes["default"].oneOf(Object.values(_reactCore.DropdownPosition)),

  /** Direction of from actions will be displayed. */
  dropdownDirection: _propTypes["default"].oneOf(Object.values(_reactCore.DropdownDirection)),

  /** Header to display above table for accessibility reasons. */
  header: function header(props) {
    if (!props['aria-label'] && !props.caption && !props.header && !props.role === 'presentation') {
      throw new Error('Specify at least one of: header, caption, aria-label');
    }

    return null;
  },

  /** Caption to display in table for accessibility reasons. */
  caption: function caption(props) {
    if (!props['aria-label'] && !props.caption && !props.header && !props.role === 'presentation') {
      throw new Error('Specify at least one of: header, caption, aria-label');
    }

    return null;
  },

  /** aria-label in table for accessibility reasons. */
  'aria-label': function ariaLabel(props) {
    if (!props['aria-label'] && !props.caption && !props.header && !props.role === 'presentation') {
      throw new Error('Specify at least one of: header, caption, aria-label');
    }

    return null;
  },
  role: _propTypes["default"].string
};
var defaultProps = {
  children: null,
  onCollapse: null,
  onExpand: null,
  className: '',
  variant: null,
  borders: true,
  sortBy: undefined,
  onSelect: undefined,
  onSort: undefined,
  actions: undefined,
  actionResolver: undefined,
  areActionsDisabled: undefined,
  bodyWrapper: undefined,
  rowWrapper: undefined,
  rowLabeledBy: 'simple-node',
  expandId: 'expandable-toggle',
  contentId: 'expanded-content',
  dropdownPosition: _reactCore.DropdownPosition.right,
  dropdownDirection: _reactCore.DropdownDirection.down,
  header: undefined,
  caption: undefined,
  'aria-label': undefined,
  gridBreakPoint: TableGridBreakpoint.gridMd,
  role: 'grid'
};

var TableContext = _react["default"].createContext();

exports.TableContext = TableContext;

var Table =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Table, _React$Component);

  function Table() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Table);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Table)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "isSelected", function (row) {
      return row.selected === true;
    });

    _defineProperty(_assertThisInitialized(_this), "areAllRowsSelected", function (rows) {
      return rows.every(function (row) {
        return _this.isSelected(row) || row.hasOwnProperty('parent') && !row.showSelect;
      });
    });

    return _this;
  }

  _createClass(Table, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          caption = _this$props.caption,
          header = _this$props.header,
          className = _this$props.className,
          gridBreakPoint = _this$props.gridBreakPoint,
          onSort = _this$props.onSort,
          onSelect = _this$props.onSelect,
          sortBy = _this$props.sortBy,
          children = _this$props.children,
          actions = _this$props.actions,
          actionResolver = _this$props.actionResolver,
          areActionsDisabled = _this$props.areActionsDisabled,
          onCollapse = _this$props.onCollapse,
          onExpand = _this$props.onExpand,
          rowLabeledBy = _this$props.rowLabeledBy,
          dropdownPosition = _this$props.dropdownPosition,
          dropdownDirection = _this$props.dropdownDirection,
          contentId = _this$props.contentId,
          expandId = _this$props.expandId,
          variant = _this$props.variant,
          rows = _this$props.rows,
          cells = _this$props.cells,
          bodyWrapper = _this$props.bodyWrapper,
          rowWrapper = _this$props.rowWrapper,
          borders = _this$props.borders,
          role = _this$props.role,
          props = _objectWithoutProperties(_this$props, ["caption", "header", "className", "gridBreakPoint", "onSort", "onSelect", "sortBy", "children", "actions", "actionResolver", "areActionsDisabled", "onCollapse", "onExpand", "rowLabeledBy", "dropdownPosition", "dropdownDirection", "contentId", "expandId", "variant", "rows", "cells", "bodyWrapper", "rowWrapper", "borders", "role"]);

      var headerData = (0, _headerUtils.calculateColumns)(cells, {
        sortBy: sortBy,
        onSort: onSort,
        onSelect: onSelect,
        allRowsSelected: onSelect ? this.areAllRowsSelected(rows) : false,
        actions: actions,
        actionResolver: actionResolver,
        areActionsDisabled: areActionsDisabled,
        onCollapse: onCollapse,
        onExpand: onExpand,
        rowLabeledBy: rowLabeledBy,
        expandId: expandId,
        contentId: contentId,
        dropdownPosition: dropdownPosition,
        dropdownDirection: dropdownDirection,
        firstUserColumnIndex: [onCollapse, onSelect].filter(function (callback) {
          return callback;
        }).length
      });
      return _react["default"].createElement(TableContext.Provider, {
        value: {
          headerData: headerData,
          rows: rows
        }
      }, header, _react["default"].createElement(_base.Provider, _extends({}, props, {
        renderers: {
          body: {
            wrapper: bodyWrapper || _BodyWrapper["default"],
            row: rowWrapper || _RowWrapper["default"],
            cell: _BodyCell["default"]
          },
          header: {
            cell: _HeaderCell["default"]
          }
        },
        columns: headerData,
        role: role,
        className: (0, _reactStyles.css)(_table["default"].table, gridBreakPoint && (0, _reactStyles.getModifier)(_tableGrid["default"], gridBreakPoint), (0, _reactStyles.getModifier)(_table["default"], variant), (onCollapse && variant === TableVariant.compact || onExpand) && _table["default"].modifiers.expandable, variant === TableVariant.compact && borders === false ? _table["default"].modifiers.noBorderRows : null, className)
      }), caption && _react["default"].createElement("caption", null, caption), children));
    }
  }]);

  return Table;
}(_react["default"].Component);

Table.propTypes = propTypes;
Table.defaultProps = defaultProps;
var _default = Table;
exports["default"] = _default;
//# sourceMappingURL=Table.js.map