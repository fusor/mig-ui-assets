(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "react", "prop-types", "./types"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("react"), require("prop-types"), require("./types"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react, global.propTypes, global.types);
    global.undefined = mod.exports;
  }
})(this, function (exports, _react, _propTypes, _types) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _interopRequireDefault(_react);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};

    var target = _objectWithoutPropertiesLoose(source, excluded);

    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      var ownKeys = Object.keys(source);

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }

      ownKeys.forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    }

    return target;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }
  /**
   * provider.js
   *
   * Forked from reactabular-table version 8.14.0
   * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src
   * */


  const componentDefaults = _types.tableDefaults.renderers;

  class Provider extends _react2.default.Component {
    getChildContext() {
      const {
        columns,
        components,
        renderers
      } = this.props;
      let finalRenderers = renderers; // XXXXX: Drop in the next major version

      if (components) {
        // eslint-disable-next-line no-console
        console.warn('`components` have been deprecated in favor of `renderers` and will be removed in the next major version, please rename!');
        finalRenderers = components;
      }

      return {
        columns,
        renderers: {
          table: finalRenderers.table || componentDefaults.table,
          header: _objectSpread({}, componentDefaults.header, finalRenderers.header),
          body: _objectSpread({}, componentDefaults.body, finalRenderers.body)
        }
      };
    }

    render() {
      const _this$props = this.props,
            {
        columns,
        // eslint-disable-line no-unused-vars
        renderers,
        components,
        // XXXXX: Drop in the next major version
        children
      } = _this$props,
            props = _objectWithoutProperties(_this$props, ["columns", "renderers", "components", "children"]);

      return _react2.default.createElement(renderers.table || _types.tableDefaults.renderers.table, props, children);
    }

  }

  exports.default = Provider;
  Provider.propTypes = _objectSpread({}, _types.tableTypes, {
    children: _propTypes2.default.any
  });
  Provider.defaultProps = _objectSpread({}, _types.tableDefaults);
  Provider.childContextTypes = _types.tableContextTypes;
});
//# sourceMappingURL=provider.js.map