(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "react", "./types", "./header-row"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("react"), require("./types"), require("./header-row"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react, global.types, global.headerRow);
    global.undefined = mod.exports;
  }
})(this, function (exports, _react, _types, _headerRow) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _interopRequireDefault(_react);

  var _headerRow2 = _interopRequireDefault(_headerRow);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};

    var target = _objectWithoutPropertiesLoose(source, excluded);

    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }
  /**
   * header.js
   *
   * Forked from reactabular-table version 8.14.0
   * https://github.com/reactabular/reactabular/tree/v8.14.0/packages/reactabular-table/src
   * */


  // eslint-disable-next-line react/prefer-stateless-function
  class Header extends _react2.default.Component {
    render() {
      const _this$props = this.props,
            {
        children,
        headerRows,
        onRow
      } = _this$props,
            props = _objectWithoutProperties(_this$props, ["children", "headerRows", "onRow"]);

      const {
        renderers,
        columns
      } = this.context; // If headerRows aren't passed, default to bodyColumns as header rows

      return _react2.default.createElement(renderers.header.wrapper, props, [(headerRows || [columns]).map((rowData, rowIndex) => _react2.default.createElement(_headerRow2.default, {
        key: `${rowIndex}-header-row`,
        renderers: renderers.header,
        onRow,
        rowData,
        rowIndex
      }))].concat(children));
    }

  }

  Header.propTypes = _types.tableHeaderTypes;
  Header.contextTypes = _types.tableHeaderContextTypes;
  exports.default = Header;
});
//# sourceMappingURL=header.js.map