(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "react", "@patternfly/react-styles", "@patternfly/react-styles/css/components/Table/table", "../../ActionsColumn"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("react"), require("@patternfly/react-styles"), require("@patternfly/react-styles/css/components/Table/table"), require("../../ActionsColumn"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react, global.reactStyles, global.table, global.ActionsColumn);
    global.undefined = mod.exports;
  }
})(this, function (exports, _react, _reactStyles, _table, _ActionsColumn) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _interopRequireDefault(_react);

  var _table2 = _interopRequireDefault(_table);

  var _ActionsColumn2 = _interopRequireDefault(_ActionsColumn);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      var ownKeys = Object.keys(source);

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }

      ownKeys.forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    }

    return target;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  const resolveOrDefault = (resolver, defaultValue, ...data) => typeof resolver === 'function' ? resolver(...data) : defaultValue;

  exports.default = (actions, actionResolver, areActionsDisabled) => (label, {
    rowData,
    column,
    rowIndex,
    columnIndex,
    column: {
      extraParams: {
        dropdownPosition,
        dropdownDirection
      }
    },
    property
  }) => {
    const extraData = {
      rowIndex,
      columnIndex,
      column,
      property
    };
    const resolvedActions = resolveOrDefault(actionResolver, actions, rowData, extraData);
    const resolvedIsDisabled = resolveOrDefault(areActionsDisabled, rowData && rowData.disableActions, rowData, extraData);
    const renderProps = resolvedActions && resolvedActions.length > 0 ? {
      children: _react2.default.createElement(_ActionsColumn2.default, {
        items: resolvedActions,
        dropdownPosition: dropdownPosition,
        dropdownDirection: dropdownDirection,
        isDisabled: resolvedIsDisabled,
        rowData: rowData,
        extraData: extraData
      }, label)
    } : {};
    return _objectSpread({
      className: (0, _reactStyles.css)(_table2.default.tableAction),
      isVisible: true
    }, renderProps);
  };
});
//# sourceMappingURL=cellActions.js.map