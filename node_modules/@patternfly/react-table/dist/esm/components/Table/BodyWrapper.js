function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import styles from '@patternfly/react-styles/css/components/Table/table';
import { css } from '@patternfly/react-styles';
import { mapOpenedRows } from './utils/headerUtils'; // eslint-disable-next-line react/prefer-stateless-function

class BodyWrapper extends React.Component {
  render() {
    const _this$props = this.props,
          {
      mappedRows,
      tbodyRef,
      rows,
      onCollapse
    } = _this$props,
          props = _objectWithoutProperties(_this$props, ["mappedRows", "tbodyRef", "rows", "onCollapse"]);

    if (mappedRows && mappedRows.some(row => row.hasOwnProperty('parent'))) {
      return React.createElement(React.Fragment, null, mapOpenedRows(mappedRows, this.props.children).map((oneRow, key) => React.createElement("tbody", _extends({}, props, {
        className: css(oneRow.isOpen && styles.modifiers.expanded),
        key: `tbody-${key}`,
        ref: tbodyRef
      }), oneRow.rows)));
    }

    return React.createElement("tbody", _extends({}, props, {
      ref: tbodyRef
    }));
  }

}

BodyWrapper.propTypes = {
  children: PropTypes.node,
  mappedRows: PropTypes.array,
  rows: PropTypes.array,
  onCollapse: PropTypes.func,
  tbodyRef: PropTypes.func
};
BodyWrapper.defaultProps = {
  children: null,
  mappedRows: undefined,
  rows: [],
  onCollapse: null,
  tbodyRef: null
};
export default BodyWrapper;
//# sourceMappingURL=BodyWrapper.js.map