(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "react", "prop-types", "@patternfly/react-styles/css/components/OptionsMenu/options-menu", "@patternfly/react-styles/css/components/Pagination/pagination", "@patternfly/react-styles", "../Dropdown", "@patternfly/react-icons", "./OptionsToggle"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("react"), require("prop-types"), require("@patternfly/react-styles/css/components/OptionsMenu/options-menu"), require("@patternfly/react-styles/css/components/Pagination/pagination"), require("@patternfly/react-styles"), require("../Dropdown"), require("@patternfly/react-icons"), require("./OptionsToggle"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react, global.propTypes, global.optionsMenu, global.pagination, global.reactStyles, global.Dropdown, global.reactIcons, global.OptionsToggle);
    global.undefined = mod.exports;
  }
})(this, function (exports, _react, _propTypes, _optionsMenu, _pagination, _reactStyles, _Dropdown, _reactIcons, _OptionsToggle) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _interopRequireDefault(_react);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _optionsMenu2 = _interopRequireDefault(_optionsMenu);

  var _pagination2 = _interopRequireDefault(_pagination);

  var _OptionsToggle2 = _interopRequireDefault(_OptionsToggle);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};

    var target = _objectWithoutPropertiesLoose(source, excluded);

    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  const propTypes = {
    className: _propTypes2.default.string,
    widgetId: _propTypes2.default.string,
    dropDirection: _propTypes2.default.oneOf(Object.values(_Dropdown.DropdownDirection)),
    perPageOptions: _propTypes2.default.arrayOf(_propTypes2.default.shape({
      title: _propTypes2.default.node,
      value: _propTypes2.default.number
    })),
    itemsPerPageTitle: _propTypes2.default.string,
    perPageSuffix: _propTypes2.default.string,
    itemsTitle: _propTypes2.default.string,
    optionsToggle: _propTypes2.default.string,
    itemCount: _propTypes2.default.number,
    firstIndex: _propTypes2.default.number,
    lastIndex: _propTypes2.default.number,
    perPage: _propTypes2.default.number,
    toggleTemplate: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
    onPerPageSelect: _propTypes2.default.func
  };
  const defaultProps = {
    className: '',
    widgetId: '',
    dropDirection: _Dropdown.DropdownDirection.down,
    perPageOptions: [],
    itemsTitle: 'items',
    itemsPerPageTitle: 'Items per page',
    perPageSuffix: 'per page',
    optionsToggle: 'Select',
    itemCount: 0,
    firstIndex: 0,
    lastIndex: 0,
    perPage: 0,
    toggleTemplate: ({
      firstIndex,
      lastIndex,
      itemCount,
      itemsTitle // eslint-disable-line react/prop-types

    }) => _react2.default.createElement(_react2.default.Fragment, null, _react2.default.createElement("strong", null, firstIndex, " - ", lastIndex), ' ', "of", _react2.default.createElement("strong", null, itemCount), " ", itemsTitle),
    onPerPageSelect: Function.prototype
  };

  class PaginationOptionsMenu extends _react.Component {
    constructor(...args) {
      super(...args);

      _defineProperty(this, "state", {
        isOpen: false
      });

      _defineProperty(this, "onToggle", isOpen => {
        this.setState({
          isOpen
        });
      });

      _defineProperty(this, "onSelect", () => {
        this.setState({
          isOpen: !this.state.isOpen
        });
      });

      _defineProperty(this, "renderItems", () => {
        const {
          perPageOptions,
          onPerPageSelect,
          perPage,
          perPageSuffix
        } = this.props;
        return perPageOptions.map(({
          value,
          title
        }) => _react2.default.createElement(_Dropdown.DropdownItem, {
          key: value,
          component: "button",
          "data-action": `per-page-${value}`,
          className: (0, _reactStyles.css)(_optionsMenu2.default.optionsMenuMenuItem, perPage === value && 'pf-m-selected'),
          onClick: event => onPerPageSelect(event, value)
        }, title, _react2.default.createElement("span", {
          className: (0, _reactStyles.css)(_pagination2.default.paginationMenuText)
        }, ` ${perPageSuffix}`), perPage === value && _react2.default.createElement("i", {
          className: (0, _reactStyles.css)(_optionsMenu2.default.optionsMenuMenuItemIcon)
        }, _react2.default.createElement(_reactIcons.CheckIcon, null))));
      });
    }

    render() {
      const _this$props = this.props,
            {
        className,
        widgetId,
        dropDirection,
        perPageOptions,
        itemsPerPageTitle,
        itemsTitle,
        optionsToggle,
        itemCount,
        firstIndex,
        lastIndex,
        perPage,
        perPageSuffix,
        onPerPageSelect,
        toggleTemplate
      } = _this$props,
            props = _objectWithoutProperties(_this$props, ["className", "widgetId", "dropDirection", "perPageOptions", "itemsPerPageTitle", "itemsTitle", "optionsToggle", "itemCount", "firstIndex", "lastIndex", "perPage", "perPageSuffix", "onPerPageSelect", "toggleTemplate"]);

      return _react2.default.createElement("div", _extends({
        className: (0, _reactStyles.css)(_optionsMenu2.default.optionsMenu, className)
      }, props, {
        ref: ref => {
          this.parentRef = ref;
        }
      }), _react2.default.createElement("span", {
        id: `${widgetId}-label`,
        hidden: true
      }, itemsPerPageTitle, ":"), _react2.default.createElement(_Dropdown.Dropdown, {
        direction: dropDirection,
        onSelect: this.onSelect,
        isOpen: this.state.isOpen,
        toggle: _react2.default.createElement(_OptionsToggle2.default, {
          optionsToggle: optionsToggle,
          showToggle: perPageOptions && perPageOptions.length > 0,
          itemsTitle: itemsTitle,
          onToggle: this.onToggle,
          isOpen: this.state.isOpen,
          firstIndex: firstIndex,
          lastIndex: lastIndex,
          itemCount: itemCount,
          widgetId: widgetId,
          parentRef: this.parentRef,
          toggleTemplate: toggleTemplate
        }),
        dropdownItems: this.renderItems(),
        isPlain: true
      }));
    }

  }

  PaginationOptionsMenu.propTypes = propTypes;
  PaginationOptionsMenu.defaultProps = defaultProps;
  exports.default = PaginationOptionsMenu;
});
//# sourceMappingURL=PaginationOptionsMenu.js.map