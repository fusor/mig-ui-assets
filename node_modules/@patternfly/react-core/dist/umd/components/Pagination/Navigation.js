(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "react", "prop-types", "@patternfly/react-styles/css/components/Pagination/pagination", "@patternfly/react-styles", "@patternfly/react-icons", "../Button"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("react"), require("prop-types"), require("@patternfly/react-styles/css/components/Pagination/pagination"), require("@patternfly/react-styles"), require("@patternfly/react-icons"), require("../Button"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react, global.propTypes, global.pagination, global.reactStyles, global.reactIcons, global.Button);
    global.undefined = mod.exports;
  }
})(this, function (exports, _react, _propTypes, _pagination, _reactStyles, _reactIcons, _Button) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _interopRequireDefault(_react);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _pagination2 = _interopRequireDefault(_pagination);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};

    var target = _objectWithoutPropertiesLoose(source, excluded);

    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  const propTypes = {
    className: _propTypes2.default.string,
    lastPage: _propTypes2.default.number,
    pagesTitle: _propTypes2.default.string,
    toLastPage: _propTypes2.default.string,
    toPreviousPage: _propTypes2.default.string,
    toNextPage: _propTypes2.default.string,
    toFirstPage: _propTypes2.default.string,
    currPage: _propTypes2.default.string,
    paginationTitle: _propTypes2.default.string,
    page: _propTypes2.default.number.isRequired,
    onSetPage: _propTypes2.default.func.isRequired,
    onNextClick: _propTypes2.default.func,
    onPreviousClick: _propTypes2.default.func,
    onFirstClick: _propTypes2.default.func,
    onLastClick: _propTypes2.default.func,
    onPageInput: _propTypes2.default.func
  };
  const defaultProps = {
    className: '',
    lastPage: 0,
    pagesTitle: '',
    toLastPage: 'Go to last page',
    toNextPage: 'Go to next page',
    toFirstPage: 'Go to first page',
    toPreviousPage: 'Go to previous page',
    currPage: 'Current page',
    paginationTitle: 'Pagination',
    onNextClick: () => undefined,
    onPreviousClick: () => undefined,
    onFirstClick: () => undefined,
    onLastClick: () => undefined,
    onPageInput: () => undefined
  };

  const Navigation = _ref => {
    let {
      page,
      lastPage,
      pagesTitle,
      toLastPage,
      toNextPage,
      toFirstPage,
      toPreviousPage,
      currPage,
      paginationTitle,
      onSetPage,
      onNextClick,
      onPreviousClick,
      onFirstClick,
      onLastClick,
      onPageInput,
      className
    } = _ref,
        props = _objectWithoutProperties(_ref, ["page", "lastPage", "pagesTitle", "toLastPage", "toNextPage", "toFirstPage", "toPreviousPage", "currPage", "paginationTitle", "onSetPage", "onNextClick", "onPreviousClick", "onFirstClick", "onLastClick", "onPageInput", "className"]);

    return _react2.default.createElement("nav", _extends({
      className: (0, _reactStyles.css)(_pagination2.default.paginationNav, className),
      "aria-label": paginationTitle
    }, props), _react2.default.createElement(_Button.Button, {
      variant: _Button.ButtonVariant.plain,
      isDisabled: page === 1,
      "aria-label": toFirstPage,
      "data-action": "first",
      onClick: event => {
        onFirstClick(event, 1);
        onSetPage(event, 1);
      }
    }, _react2.default.createElement(_reactIcons.AngleDoubleLeftIcon, null)), _react2.default.createElement(_Button.Button, {
      variant: _Button.ButtonVariant.plain,
      isDisabled: page === 1,
      "data-action": "previous",
      onClick: event => {
        const newPage = page - 1 >= 1 ? page - 1 : 1;
        onPreviousClick(event, newPage);
        onSetPage(event, newPage);
      },
      "aria-label": toPreviousPage
    }, _react2.default.createElement(_reactIcons.AngleLeftIcon, null)), _react2.default.createElement("div", {
      className: (0, _reactStyles.css)(_pagination2.default.paginationNavPageSelect)
    }, _react2.default.createElement("input", {
      className: (0, _reactStyles.css)(_pagination2.default.formControl),
      "aria-label": currPage,
      type: "number",
      min: "1",
      max: lastPage,
      value: page,
      onChange: event => {
        let inputPage = Number.parseInt(event.target.value, 10);
        inputPage = Number.isNaN(inputPage) ? page : inputPage;
        inputPage = inputPage > lastPage ? lastPage : inputPage;
        inputPage = inputPage < 1 ? 1 : inputPage;
        onSetPage(event, Number.isNaN(inputPage) ? page : inputPage);
        onPageInput(event, Number.isNaN(inputPage) ? page : inputPage);
      }
    }), _react2.default.createElement("span", {
      "aria-hidden": "true"
    }, "of ", lastPage, " ", pagesTitle)), _react2.default.createElement(_Button.Button, {
      variant: _Button.ButtonVariant.plain,
      isDisabled: page === lastPage,
      "aria-label": toNextPage,
      "data-action": "next",
      onClick: event => {
        const newPage = page + 1 <= lastPage ? page + 1 : lastPage;
        onNextClick(event, newPage);
        onSetPage(event, newPage);
      }
    }, _react2.default.createElement(_reactIcons.AngleRightIcon, null)), _react2.default.createElement(_Button.Button, {
      variant: _Button.ButtonVariant.plain,
      isDisabled: page === lastPage,
      "aria-label": toLastPage,
      "data-action": "last",
      onClick: event => {
        onLastClick(event, lastPage);
        onSetPage(event, lastPage);
      }
    }, _react2.default.createElement(_reactIcons.AngleDoubleRightIcon, null)));
  };

  Navigation.propTypes = propTypes;
  Navigation.defaultProps = defaultProps;
  exports.default = Navigation;
});
//# sourceMappingURL=Navigation.js.map